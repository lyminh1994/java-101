version: '3.9'

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka
    image: bitnami/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LOG_DIRS: /tmp/kafka_mounts/logs
      KAFKA_CREATE_TOPICS: 'transactions:1:2'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - '8090:8080'
    depends_on:
      - zookeeper
      - kafka
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: Root@123
      PGDATA: /data/postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - '5050:80'
    depends_on:
      - postgres
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - ~/apps/mongo:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    ports:
      - '8081:8081'
    depends_on:
      - mongodb
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb

#  banking-service:
#    build: ./banking-service
#    ports:
#      - "8080:8080"
#    depends_on:
#      - zookeeper
#      - kafka
#      - mongodb
#      - notify-service
#      - report-service
#      - account-service
#  notify-service:
#    build: ./notify-service
#    ports:
#      - "8081:8081"
#    depends_on:
#      - zookeeper
#      - kafka
#      - mongodb
#  report-service:
#    build: ./report-service
#    ports:
#      - "8082:8082"
#    depends_on:
#      - zookeeper
#      - kafka
#      - mongodb
#  account-service:
#    build: ./account-service
#    ports:
#      - "8083:8083"
#    depends_on:
#      - zookeeper
#      - kafka
#      - mongodb
